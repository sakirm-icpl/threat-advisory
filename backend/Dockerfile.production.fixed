# Production Dockerfile for Backend - FIXED
FROM python:3.11-slim

# Security: Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements first for better layer caching
COPY requirements.txt .

# Install Python dependencies (including gunicorn)
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip cache purge

# Copy application code
COPY . .

# Create startup script with database initialization
RUN cat > /app/start.sh << 'EOF'
#!/bin/bash
set -e

export PYTHONPATH=/app

echo "Starting VersionIntel Backend..."
echo "Waiting for database connection..."

# Initialize database
python3 -c "
from app import create_app, db
from sqlalchemy import text
import time
import os

app = create_app()
with app.app_context():
    # Wait for database connection
    max_retries = 30
    for i in range(max_retries):
        try:
            db.session.execute(text('SELECT 1'))
            print('Database connection successful')
            break
        except Exception as e:
            print(f'Waiting for database... {i+1}/{max_retries}: {e}')
            time.sleep(2)
            if i == max_retries - 1:
                print('Database connection failed')
                exit(1)
    
    # Create tables
    try:
        db.create_all()
        print('Database tables created/verified')
    except Exception as e:
        print(f'Table creation error: {e}')
"

echo "Starting Gunicorn server..."
exec gunicorn --bind 0.0.0.0:5000 --workers 4 --worker-class sync --timeout 120 --keepalive 5 --max-requests 1000 --max-requests-jitter 100 --preload wsgi:app
EOF

RUN chmod +x /app/start.sh

# Set proper permissions
RUN chown -R appuser:appuser /app

# Create log directory
RUN mkdir -p /var/log/versionintel && chown appuser:appuser /var/log/versionintel

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

EXPOSE 5000

CMD ["/app/start.sh"]