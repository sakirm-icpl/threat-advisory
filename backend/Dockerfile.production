# VersionIntel Backend Production Dockerfile
FROM python:3.11-slim

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create startup script
COPY <<EOF /app/start.sh
#!/bin/bash
set -e
export PYTHONPATH=/app
echo "=== VersionIntel Backend Starting ==="
echo "Environment: \${FLASK_ENV:-production}"
echo "Database: \$POSTGRES_HOST:\${POSTGRES_PORT:-5432}/\$POSTGRES_DB"
echo "Waiting for database..."
while ! pg_isready -h \$POSTGRES_HOST -p \${POSTGRES_PORT:-5432} -U \$POSTGRES_USER; do
  echo "Waiting for database..."
  sleep 2
done
echo "Database is ready!"
echo "Initializing database..."
python3 init_db.py
echo "Starting Gunicorn server..."
exec gunicorn --bind 0.0.0.0:5000 --workers 4 --worker-class sync --timeout 120 --keepalive 5 --max-requests 1000 --max-requests-jitter 100 --access-logfile - --error-logfile - --log-level info wsgi:app
EOF

RUN chmod +x /app/start.sh && chown -R appuser:appuser /app

# Create log directory
RUN mkdir -p /var/log/versionintel && chown appuser:appuser /var/log/versionintel

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

EXPOSE 5000

CMD ["/app/start.sh"]